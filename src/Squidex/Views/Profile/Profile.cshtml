@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model Squidex.Controllers.UI.Profile.ProfileVM

@{
    ViewBag.Theme = "white";
    ViewBag.Title = "Profile";
}

<div class="profile profile-lg">
    <img class="profile-logo" src="~/images/logo-small.png" />
    
    <h1>Edit Profile</h1>

    <h2>Personal Information</h2>

    @if (!string.IsNullOrWhiteSpace(ViewBag.SuccessMessage))
    {
        <div class="form-alert form-alert-success">
            @ViewBag.SuccessMessage
        </div>
    }

    @if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
    {
        <div class="form-alert form-alert-error">
            @ViewBag.ErrorMessage
        </div>
    }

    <div class="row">
        <div class="col profile-picture-col">
            <img class="profile-picture" src="@Model.PictureUrl" />
        </div>
        <div class="col">
            <form class="profile-form" asp-controller="Profile" asp-action="Profile" method="post">
                <div class="form-group">
                    <label for="email">Email</label>
                    
                    @if (ViewContext.ViewData.ModelState["Email"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                    {
                        <div class="errors-container">
                            <span asp-validation-for="Email" class="errors"></span>
                        </div>
                    }

                    <input type="email" ap class="form-control" asp-for="Email" name="email" id="email" />
                </div>

                <div class="form-group">
                    <label for="displayName">Display Name</label>


                    @if (ViewContext.ViewData.ModelState["DisplayName"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                    {
                        <div class="errors-container">
                            <span asp-validation-for="DisplayName" class="errors"></span>
                        </div>
                    }

                    <input type="text" class="form-control" asp-for="DisplayName" name="displayName" id="displayName"/>
                </div>

                <button type="submit" class="btn btn-primary">Save</button>
            </form>
        </div>
    </div>
    
    @if (Model.HasPasswordAuth)
    {
        <h2>Password</h2>

        @if (Model.HasPassword)
         {
             <form class="profile-form" asp-controller="Profile" asp-action="ChangePassword" method="post">
                 <div class="form-group">
                     <label for="oldPassword">Old Password</label>

                     @if (ViewContext.ViewData.ModelState["OldPassword"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                     {
                         <div class="errors-container">
                             <span class="errors">@Html.ValidationMessage("OldPassword")</span>
                         </div>
                     }

                     <input type="password" class="form-control" name="oldPassword" id="oldPassword"/>
                 </div>

                 <div class="form-group">
                     <label for="password">Password</label>

                     @if (ViewContext.ViewData.ModelState["Password"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                     {
                         <div class="errors-container">
                             <span class="errors">@Html.ValidationMessage("Password")</span>
                         </div>
                     }

                     <input type="password" class="form-control" name="password" id="password"/>
                 </div>

                 <div class="form-group">
                     <label for="passwordConfirm">Confirm</label>

                     @if (ViewContext.ViewData.ModelState["PasswordConfirm"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                     {
                         <div class="errors-container">
                             <span class="errors">@Html.ValidationMessage("PasswordConfirm")</span>
                         </div>
                     }

                     <input type="password" class="form-control" name="passwordConfirm" id="passwordConfirm"/>
                 </div>

                 <div class="form-group">
                     <button type="submit" class="btn btn-primary">Change Password</button>
                 </div>
             </form>
         }
         else
         {
             <form class="profile-form" asp-controller="Profile" asp-action="SetPassword" method="post">
                 <div class="form-group">
                     <label for="password">Password</label>

                     @if (ViewContext.ViewData.ModelState["Password"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                     {
                         <div class="errors-container">
                             <span class="errors">@Html.ValidationMessage("Password")</span>
                         </div>
                     }

                     <input type="password" class="form-control" name="password" id="password"/>
                 </div>

                 <div class="form-group">
                     <label for="passwordConfirm">Confirm</label>

                     @if (ViewContext.ViewData.ModelState["PasswordConfirm"]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                     {
                         <div class="errors-container">
                             <span class="errors">@Html.ValidationMessage("PasswordConfirm")</span>
                         </div>
                     }

                     <input type="password" class="form-control" name="passwordConfirm" id="passwordConfirm"/>
                 </div>

                 <div class="form-group">
                     <button type="submit" class="btn btn-primary">Set Password</button>
                 </div>
             </form>
         }
    }
</div>