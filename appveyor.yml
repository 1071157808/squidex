version: 1.0.{build}

image: Visual Studio 2017

branches:
  only:
  - master

environment:
  nodejs_version: 6
  DOCKER_USER:
    secure: SWa6ANux+qBasg+rV9s1ow==
  DOCKER_PASS:
    secure: 4qfqj51DHaNYA6o4RcmH9g==

install:
  - ps: Install-Product node 6

build_script:
  - cd src/Squidex
  - npm i
  - npm run build:copy
  - npm run build
  - cd ../..
  - dotnet restore
  - dotnet publish src/Squidex/Squidex.csproj -o %APPVEYOR_BUILD_FOLDER%/release -c  Release
  - docker build -t squidex/squidex:%APPVEYOR_BUILD_VERSION% -t squidex/squidex:latest %APPVEYOR_BUILD_FOLDER%/release

test_script:
  - dotnet test tests/Squidex.Infrastructure.Tests/Squidex.Infrastructure.Tests.csproj
  - dotnet test tests/Squidex.Domain.Apps.Core.Tests/Squidex.Domain.Apps.Core.Tests.csproj
  - dotnet test tests/Squidex.Domain.Apps.Read.Tests/Squidex.Domain.Apps.Read.Tests.csproj
  - dotnet test tests/Squidex.Domain.Apps.Write.Tests/Squidex.Domain.Apps.Write.Tests.csproj
  - dotnet test tests/Squidex.Domain.Users.Tests/Squidex.Domain.Users.Tests.csproj
  - cd src/Squidex
  - npm run test:coverage
 
deploy:
  - provider: GitHub
    auth_token:
      secure: 4UMRCqCLa0Hm/3vGAtXK+1QCzWyStTzu3EqVOypD7fPRG5SV+m6bda2w9UHpK634
    artifact: release.zip

after_deploy:
  - docker push squidex/squidex:latest
  - docker login -u="%DOCKER_USER%" -p="%DOCKER_PASS%"
  - docker push squidex/squidex:%APPVEYOR_BUILD_VERSION%
  
artifacts:
  - path: release